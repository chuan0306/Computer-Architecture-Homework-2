	.file	"main.c"
	.option nopic
	.attribute arch, "rv32i2p1_zicsr2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
	.section	.rodata
	.align	2
.LC1:
	.string	"Original Data:"
	.align	2
.LC2:
	.string	"Data: 0x%016lx\n"
	.align	2
.LC3:
	.string	"\nEncrypted Data:"
	.align	2
.LC4:
	.string	"\nDecrypted Data:"
	.align	2
.LC5:
	.string	"cycle count: %u\n"
	.align	2
.LC6:
	.string	"instret: %x\n"
	.text
	.align	2
	.globl	main
	.type	main, @function
main:
	addi	sp,sp,-112
	sw	ra,108(sp)
	sw	s0,104(sp)
	addi	s0,sp,112
	sw	zero,-96(s0)
	sw	zero,-92(s0)
	sw	zero,-88(s0)
	sw	zero,-84(s0)
	sw	zero,-80(s0)
	sw	zero,-76(s0)
	sw	zero,-72(s0)
	sw	zero,-68(s0)
	sw	zero,-64(s0)
	sw	zero,-60(s0)
	sw	zero,-56(s0)
	sw	zero,-52(s0)
	call	get_instret
	sw	a0,-24(s0)
	sw	a1,-20(s0)
	call	get_cycles
	sw	a0,-32(s0)
	sw	a1,-28(s0)
	lui	a5,%hi(.LC0)
	lw	a4,%lo(.LC0)(a5)
	lw	a5,%lo(.LC0+4)(a5)
	sw	a4,-40(s0)
	sw	a5,-36(s0)
	li	a4,269488128
	addi	a4,a4,16
	li	a5,0
	sw	a4,-104(s0)
	sw	a5,-100(s0)
	lui	a5,%hi(.LC1)
	addi	a0,a5,%lo(.LC1)
	call	puts
	lw	a4,-104(s0)
	lw	a5,-100(s0)
	mv	a2,a4
	mv	a3,a5
	lui	a5,%hi(.LC2)
	addi	a0,a5,%lo(.LC2)
	call	printf
	lui	a5,%hi(.LC3)
	addi	a0,a5,%lo(.LC3)
	call	puts
	addi	a5,s0,-104
	lw	a1,-40(s0)
	lw	a2,-36(s0)
	mv	a0,a5
	call	encrypt
	lw	a4,-104(s0)
	lw	a5,-100(s0)
	mv	a2,a4
	mv	a3,a5
	lui	a5,%hi(.LC2)
	addi	a0,a5,%lo(.LC2)
	call	printf
	lui	a5,%hi(.LC4)
	addi	a0,a5,%lo(.LC4)
	call	puts
	addi	a5,s0,-104
	lw	a1,-40(s0)
	lw	a2,-36(s0)
	mv	a0,a5
	call	decrypt
	lw	a4,-104(s0)
	lw	a5,-100(s0)
	mv	a2,a4
	mv	a3,a5
	lui	a5,%hi(.LC2)
	addi	a0,a5,%lo(.LC2)
	call	printf
	call	get_cycles
	mv	a2,a0
	mv	a3,a1
	lw	a0,-32(s0)
	lw	a1,-28(s0)
	sub	a4,a2,a0
	mv	a6,a4
	sgtu	a6,a6,a2
	sub	a5,a3,a1
	sub	a3,a5,a6
	mv	a5,a3
	sw	a4,-48(s0)
	sw	a5,-44(s0)
	lw	a5,-48(s0)
	mv	a1,a5
	lui	a5,%hi(.LC5)
	addi	a0,a5,%lo(.LC5)
	call	printf
	lw	a5,-24(s0)
	mv	a1,a5
	lui	a5,%hi(.LC6)
	addi	a0,a5,%lo(.LC6)
	call	printf
	addi	a5,s0,-96
	li	a2,48
	li	a1,0
	mv	a0,a5
	call	memset
	li	a5,0
	mv	a0,a5
	lw	ra,108(sp)
	lw	s0,104(sp)
	addi	sp,sp,112
	jr	ra
	.size	main, .-main
	.align	2
	.globl	count_leading_zeros
	.type	count_leading_zeros, @function
count_leading_zeros:
	addi	sp,sp,-144
	sw	s0,140(sp)
	sw	s2,136(sp)
	sw	s3,132(sp)
	sw	s4,128(sp)
	sw	s5,124(sp)
	sw	s6,120(sp)
	sw	s7,116(sp)
	sw	s8,112(sp)
	sw	s9,108(sp)
	sw	s10,104(sp)
	sw	s11,100(sp)
	addi	s0,sp,144
	sw	a0,-56(s0)
	sw	a1,-52(s0)
	lw	a5,-52(s0)
	slli	a4,a5,31
	lw	a5,-56(s0)
	srli	a2,a5,1
	or	a2,a4,a2
	lw	a5,-52(s0)
	srli	a3,a5,1
	lw	a5,-56(s0)
	or	t3,a5,a2
	lw	a5,-52(s0)
	or	t4,a5,a3
	sw	t3,-56(s0)
	sw	t4,-52(s0)
	lw	a5,-52(s0)
	slli	a4,a5,30
	lw	a5,-56(s0)
	srli	a6,a5,2
	or	a6,a4,a6
	lw	a5,-52(s0)
	srli	a7,a5,2
	lw	a5,-56(s0)
	or	a5,a5,a6
	sw	a5,-112(s0)
	lw	a5,-52(s0)
	or	a5,a5,a7
	sw	a5,-108(s0)
	lw	a5,-112(s0)
	lw	a6,-108(s0)
	sw	a5,-56(s0)
	sw	a6,-52(s0)
	lw	a5,-52(s0)
	slli	a4,a5,28
	lw	a5,-56(s0)
	srli	t1,a5,4
	or	t1,a4,t1
	lw	a5,-52(s0)
	srli	t2,a5,4
	lw	a5,-56(s0)
	or	a5,a5,t1
	sw	a5,-120(s0)
	lw	a5,-52(s0)
	or	a5,a5,t2
	sw	a5,-116(s0)
	lw	a5,-120(s0)
	lw	a6,-116(s0)
	sw	a5,-56(s0)
	sw	a6,-52(s0)
	lw	a5,-52(s0)
	slli	a4,a5,24
	lw	a5,-56(s0)
	srli	s2,a5,8
	or	s2,a4,s2
	lw	a5,-52(s0)
	srli	s3,a5,8
	lw	a5,-56(s0)
	or	a5,a5,s2
	sw	a5,-128(s0)
	lw	a5,-52(s0)
	or	a5,a5,s3
	sw	a5,-124(s0)
	lw	a5,-128(s0)
	lw	a6,-124(s0)
	sw	a5,-56(s0)
	sw	a6,-52(s0)
	lw	a5,-52(s0)
	slli	a4,a5,16
	lw	a5,-56(s0)
	srli	a5,a5,16
	sw	a5,-64(s0)
	lw	a5,-64(s0)
	or	a5,a4,a5
	sw	a5,-64(s0)
	lw	a5,-52(s0)
	srli	a5,a5,16
	sw	a5,-60(s0)
	lw	a5,-56(s0)
	lw	a2,-64(s0)
	lw	a3,-60(s0)
	mv	a4,a2
	or	a5,a5,a4
	sw	a5,-136(s0)
	lw	a5,-52(s0)
	mv	a4,a3
	or	a5,a5,a4
	sw	a5,-132(s0)
	lw	a5,-136(s0)
	lw	a6,-132(s0)
	sw	a5,-56(s0)
	sw	a6,-52(s0)
	lw	a5,-52(s0)
	srli	a5,a5,0
	sw	a5,-72(s0)
	sw	zero,-68(s0)
	lw	a5,-56(s0)
	lw	a2,-72(s0)
	lw	a3,-68(s0)
	mv	a4,a2
	or	a5,a5,a4
	sw	a5,-144(s0)
	lw	a5,-52(s0)
	mv	a4,a3
	or	a5,a5,a4
	sw	a5,-140(s0)
	lw	a5,-144(s0)
	lw	a6,-140(s0)
	sw	a5,-56(s0)
	sw	a6,-52(s0)
	lw	a5,-52(s0)
	slli	a5,a5,31
	lw	a4,-56(s0)
	srli	s10,a4,1
	or	s10,a5,s10
	lw	a5,-52(s0)
	srli	s11,a5,1
	li	a5,1431654400
	addi	a5,a5,1365
	and	a5,s10,a5
	sw	a5,-80(s0)
	li	a5,1431654400
	addi	a5,a5,1365
	and	a5,s11,a5
	sw	a5,-76(s0)
	lw	a2,-56(s0)
	lw	a3,-52(s0)
	lw	a6,-80(s0)
	lw	a7,-76(s0)
	mv	a1,a6
	sub	a4,a2,a1
	mv	a1,a4
	sgtu	a1,a1,a2
	mv	a0,a7
	sub	a5,a3,a0
	sub	a3,a5,a1
	mv	a5,a3
	sw	a4,-56(s0)
	sw	a5,-52(s0)
	lw	a5,-52(s0)
	slli	a5,a5,30
	lw	a4,-56(s0)
	srli	s8,a4,2
	or	s8,a5,s8
	lw	a5,-52(s0)
	srli	s9,a5,2
	li	a5,858992640
	addi	a5,a5,819
	and	a5,s8,a5
	sw	a5,-88(s0)
	li	a5,858992640
	addi	a5,a5,819
	and	a5,s9,a5
	sw	a5,-84(s0)
	lw	a4,-56(s0)
	li	a5,858992640
	addi	a5,a5,819
	and	a5,a4,a5
	sw	a5,-96(s0)
	lw	a4,-52(s0)
	li	a5,858992640
	addi	a5,a5,819
	and	a5,a4,a5
	sw	a5,-92(s0)
	lw	a0,-88(s0)
	lw	a1,-84(s0)
	mv	a3,a0
	lw	a6,-96(s0)
	lw	a7,-92(s0)
	mv	a2,a6
	add	a4,a3,a2
	mv	a3,a4
	mv	a2,a0
	sltu	a3,a3,a2
	mv	a2,a1
	mv	a1,a7
	add	a5,a2,a1
	add	a3,a3,a5
	mv	a5,a3
	sw	a4,-56(s0)
	sw	a5,-52(s0)
	lw	a5,-52(s0)
	slli	a5,a5,28
	lw	a4,-56(s0)
	srli	t5,a4,4
	or	t5,a5,t5
	lw	a5,-52(s0)
	srli	t6,a5,4
	lw	a2,-56(s0)
	lw	a3,-52(s0)
	add	a4,t5,a2
	mv	a1,a4
	sltu	a1,a1,t5
	add	a5,t6,a3
	add	a3,a1,a5
	mv	a5,a3
	li	a3,252645376
	addi	a3,a3,-241
	and	a3,a4,a3
	sw	a3,-56(s0)
	li	a3,252645376
	addi	a3,a3,-241
	and	a5,a5,a3
	sw	a5,-52(s0)
	lw	a5,-52(s0)
	slli	a5,a5,24
	lw	a4,-56(s0)
	srli	s6,a4,8
	or	s6,a5,s6
	lw	a5,-52(s0)
	srli	s7,a5,8
	lw	a2,-56(s0)
	lw	a3,-52(s0)
	add	a4,a2,s6
	mv	a1,a4
	sltu	a1,a1,a2
	add	a5,a3,s7
	add	a3,a1,a5
	mv	a5,a3
	sw	a4,-56(s0)
	sw	a5,-52(s0)
	lw	a5,-52(s0)
	slli	a5,a5,16
	lw	a4,-56(s0)
	srli	s4,a4,16
	or	s4,a5,s4
	lw	a5,-52(s0)
	srli	s5,a5,16
	lw	a2,-56(s0)
	lw	a3,-52(s0)
	add	a4,a2,s4
	mv	a1,a4
	sltu	a1,a1,a2
	add	a5,a3,s5
	add	a3,a1,a5
	mv	a5,a3
	sw	a4,-56(s0)
	sw	a5,-52(s0)
	lw	a5,-52(s0)
	srli	a5,a5,0
	sw	a5,-104(s0)
	sw	zero,-100(s0)
	lw	a2,-56(s0)
	lw	a3,-52(s0)
	lw	a6,-104(s0)
	lw	a7,-100(s0)
	mv	a1,a6
	add	a4,a2,a1
	mv	a1,a4
	sltu	a1,a1,a2
	mv	a0,a7
	add	a5,a3,a0
	add	a3,a1,a5
	mv	a5,a3
	sw	a4,-56(s0)
	sw	a5,-52(s0)
	lhu	a5,-56(s0)
	andi	a5,a5,127
	slli	a5,a5,16
	srli	a5,a5,16
	li	a4,64
	sub	a5,a4,a5
	slli	a5,a5,16
	srli	a5,a5,16
	mv	a0,a5
	lw	s0,140(sp)
	lw	s2,136(sp)
	lw	s3,132(sp)
	lw	s4,128(sp)
	lw	s5,124(sp)
	lw	s6,120(sp)
	lw	s7,116(sp)
	lw	s8,112(sp)
	lw	s9,108(sp)
	lw	s10,104(sp)
	lw	s11,100(sp)
	addi	sp,sp,144
	jr	ra
	.size	count_leading_zeros, .-count_leading_zeros
	.align	2
	.globl	decrypt
	.type	decrypt, @function
decrypt:
	addi	sp,sp,-64
	sw	ra,60(sp)
	sw	s0,56(sp)
	sw	s2,52(sp)
	sw	s3,48(sp)
	sw	s4,44(sp)
	sw	s5,40(sp)
	addi	s0,sp,64
	sw	a0,-52(s0)
	sw	a1,-64(s0)
	sw	a2,-60(s0)
	lw	a0,-64(s0)
	lw	a1,-60(s0)
	call	count_leading_zeros
	mv	a5,a0
	sh	a5,-34(s0)
	lw	a5,-52(s0)
	lw	a2,0(a5)
	lw	a3,4(a5)
	lhu	a5,-34(s0)
	addi	a4,a5,-32
	blt	a4,zero,.L6
	lw	a5,-64(s0)
	sll	s3,a5,a4
	li	s2,0
	j	.L7
.L6:
	lw	a4,-64(s0)
	srli	a1,a4,1
	li	a4,31
	sub	a4,a4,a5
	srl	a4,a1,a4
	lw	a1,-60(s0)
	sll	s3,a1,a5
	or	s3,a4,s3
	lw	a4,-64(s0)
	sll	s2,a4,a5
.L7:
	xor	s4,a2,s2
	xor	s5,a3,s3
	lw	a5,-52(s0)
	sw	s4,0(a5)
	sw	s5,4(a5)
	nop
	lw	ra,60(sp)
	lw	s0,56(sp)
	lw	s2,52(sp)
	lw	s3,48(sp)
	lw	s4,44(sp)
	lw	s5,40(sp)
	addi	sp,sp,64
	jr	ra
	.size	decrypt, .-decrypt
	.align	2
	.globl	encrypt
	.type	encrypt, @function
encrypt:
	addi	sp,sp,-64
	sw	ra,60(sp)
	sw	s0,56(sp)
	sw	s2,52(sp)
	sw	s3,48(sp)
	sw	s4,44(sp)
	sw	s5,40(sp)
	addi	s0,sp,64
	sw	a0,-52(s0)
	sw	a1,-64(s0)
	sw	a2,-60(s0)
	lw	a0,-64(s0)
	lw	a1,-60(s0)
	call	count_leading_zeros
	mv	a5,a0
	sh	a5,-34(s0)
	lw	a5,-52(s0)
	lw	a2,0(a5)
	lw	a3,4(a5)
	lhu	a5,-34(s0)
	addi	a4,a5,-32
	blt	a4,zero,.L9
	lw	a5,-64(s0)
	sll	s3,a5,a4
	li	s2,0
	j	.L10
.L9:
	lw	a4,-64(s0)
	srli	a1,a4,1
	li	a4,31
	sub	a4,a4,a5
	srl	a4,a1,a4
	lw	a1,-60(s0)
	sll	s3,a1,a5
	or	s3,a4,s3
	lw	a4,-64(s0)
	sll	s2,a4,a5
.L10:
	xor	s4,a2,s2
	xor	s5,a3,s3
	lw	a5,-52(s0)
	sw	s4,0(a5)
	sw	s5,4(a5)
	nop
	lw	ra,60(sp)
	lw	s0,56(sp)
	lw	s2,52(sp)
	lw	s3,48(sp)
	lw	s4,44(sp)
	lw	s5,40(sp)
	addi	sp,sp,64
	jr	ra
	.size	encrypt, .-encrypt
	.section	.rodata
	.align	3
.LC0:
	.word	-1985229329
	.word	19088743
	.ident	"GCC: (xPack GNU RISC-V Embedded GCC x86_64) 13.2.0"
